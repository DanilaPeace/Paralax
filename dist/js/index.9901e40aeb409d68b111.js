!function(){var n,t={755:function(n){var t=[];n.exports=function(n){if(!(t.indexOf(n)>=0)){t.push(n);var e=document.createElement("style"),i=document.createTextNode(n);e.appendChild(i),document.head.childNodes.length?document.head.insertBefore(e,document.head.childNodes[0]):document.head.appendChild(e)}}},589:function(n,t,e){e(755)(e(965))},965:function(n){n.exports='/*! normalize.css v2.1.3 | MIT License | git.io/normalize */\n\n/* ==========================================================================\n   HTML5 display definitions\n   ========================================================================== */\n\n/**\n * Correct `block` display not defined in IE 8/9.\n */\n\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmain,\nnav,\nsection,\nsummary {\n    display: block;\n}\n\n/**\n * Correct `inline-block` display not defined in IE 8/9.\n */\n\naudio,\ncanvas,\nvideo {\n    display: inline-block;\n}\n\n/**\n * Prevent modern browsers from displaying `audio` without controls.\n * Remove excess height in iOS 5 devices.\n */\n\naudio:not([controls]) {\n    display: none;\n    height: 0;\n}\n\n/**\n * Address `[hidden]` styling not present in IE 8/9.\n * Hide the `template` element in IE, Safari, and Firefox < 22.\n */\n\n[hidden],\ntemplate {\n    display: none;\n}\n\n/* ==========================================================================\n   Base\n   ========================================================================== */\n\n/**\n * 1. Set default font family to sans-serif.\n * 2. Prevent iOS text size adjust after orientation change, without disabling\n *    user zoom.\n */\n\nhtml {\n    font-family: sans-serif; /* 1 */\n    -ms-text-size-adjust: 100%; /* 2 */\n    -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/**\n * Remove default margin.\n */\n\nbody {\n    margin: 0;\n}\n\n/* ==========================================================================\n   Links\n   ========================================================================== */\n\n/**\n * Remove the gray background color from active links in IE 10.\n */\n\na {\n    background: transparent;\n}\n\n/**\n * Address `outline` inconsistency between Chrome and other browsers.\n */\n\na:focus {\n    outline: thin dotted;\n}\n\n/**\n * Improve readability when focused and also mouse hovered in all browsers.\n */\n\na:active,\na:hover {\n    outline: 0;\n}\n\n/* ==========================================================================\n   Typography\n   ========================================================================== */\n\n/**\n * Address variable `h1` font-size and margin within `section` and `article`\n * contexts in Firefox 4+, Safari 5, and Chrome.\n */\n\nh1 {\n    font-size: 2em;\n    margin: 0.67em 0;\n}\n\n/**\n * Address styling not present in IE 8/9, Safari 5, and Chrome.\n */\n\nabbr[title] {\n    border-bottom: 1px dotted;\n}\n\n/**\n * Address style set to `bolder` in Firefox 4+, Safari 5, and Chrome.\n */\n\nb,\nstrong {\n    font-weight: bold;\n}\n\n/**\n * Address styling not present in Safari 5 and Chrome.\n */\n\ndfn {\n    font-style: italic;\n}\n\n/**\n * Address differences between Firefox and other browsers.\n */\n\nhr {\n    -moz-box-sizing: content-box;\n    box-sizing: content-box;\n    height: 0;\n}\n\n/**\n * Address styling not present in IE 8/9.\n */\n\nmark {\n    background: #ff0;\n    color: #000;\n}\n\n/**\n * Correct font family set oddly in Safari 5 and Chrome.\n */\n\ncode,\nkbd,\npre,\nsamp {\n    font-family: monospace, serif;\n    font-size: 1em;\n}\n\n/**\n * Improve readability of pre-formatted text in all browsers.\n */\n\npre {\n    white-space: pre-wrap;\n}\n\n/**\n * Set consistent quote types.\n */\n\nq {\n    quotes: "\\201C" "\\201D" "\\2018" "\\2019";\n}\n\n/**\n * Address inconsistent and variable font size in all browsers.\n */\n\nsmall {\n    font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` affecting `line-height` in all browsers.\n */\n\nsub,\nsup {\n    font-size: 75%;\n    line-height: 0;\n    position: relative;\n    vertical-align: baseline;\n}\n\nsup {\n    top: -0.5em;\n}\n\nsub {\n    bottom: -0.25em;\n}\n\n/* ==========================================================================\n   Embedded content\n   ========================================================================== */\n\n/**\n * Remove border when inside `a` element in IE 8/9.\n */\n\nimg {\n    border: 0;\n}\n\n/**\n * Correct overflow displayed oddly in IE 9.\n */\n\nsvg:not(:root) {\n    overflow: hidden;\n}\n\n/* ==========================================================================\n   Figures\n   ========================================================================== */\n\n/**\n * Address margin not present in IE 8/9 and Safari 5.\n */\n\nfigure {\n    margin: 0;\n}\n\n/* ==========================================================================\n   Forms\n   ========================================================================== */\n\n/**\n * Define consistent border, margin, and padding.\n */\n\nfieldset {\n    border: 1px solid #c0c0c0;\n    margin: 0 2px;\n    padding: 0.35em 0.625em 0.75em;\n}\n\n/**\n * 1. Correct `color` not being inherited in IE 8/9.\n * 2. Remove padding so people aren\'t caught out if they zero out fieldsets.\n */\n\nlegend {\n    border: 0; /* 1 */\n    padding: 0; /* 2 */\n}\n\n/**\n * 1. Correct font family not being inherited in all browsers.\n * 2. Correct font size not being inherited in all browsers.\n * 3. Address margins set differently in Firefox 4+, Safari 5, and Chrome.\n */\n\nbutton,\ninput,\nselect,\ntextarea {\n    font-family: inherit; /* 1 */\n    font-size: 100%; /* 2 */\n    margin: 0; /* 3 */\n}\n\n/**\n * Address Firefox 4+ setting `line-height` on `input` using `!important` in\n * the UA stylesheet.\n */\n\nbutton,\ninput {\n    line-height: normal;\n}\n\n/**\n * Address inconsistent `text-transform` inheritance for `button` and `select`.\n * All other form control elements do not inherit `text-transform` values.\n * Correct `button` style inheritance in Chrome, Safari 5+, and IE 8+.\n * Correct `select` style inheritance in Firefox 4+ and Opera.\n */\n\nbutton,\nselect {\n    text-transform: none;\n}\n\n/**\n * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`\n *    and `video` controls.\n * 2. Correct inability to style clickable `input` types in iOS.\n * 3. Improve usability and consistency of cursor style between image-type\n *    `input` and others.\n */\n\nbutton,\nhtml input[type="button"], /* 1 */\ninput[type="reset"],\ninput[type="submit"] {\n    -webkit-appearance: button; /* 2 */\n    cursor: pointer; /* 3 */\n}\n\n/**\n * Re-set default cursor for disabled elements.\n */\n\nbutton[disabled],\nhtml input[disabled] {\n    cursor: default;\n}\n\n/**\n * 1. Address box sizing set to `content-box` in IE 8/9/10.\n * 2. Remove excess padding in IE 8/9/10.\n */\n\ninput[type="checkbox"],\ninput[type="radio"] {\n    box-sizing: border-box; /* 1 */\n    padding: 0; /* 2 */\n}\n\n/**\n * 1. Address `appearance` set to `searchfield` in Safari 5 and Chrome.\n * 2. Address `box-sizing` set to `border-box` in Safari 5 and Chrome\n *    (include `-moz` to future-proof).\n */\n\ninput[type="search"] {\n    -webkit-appearance: textfield; /* 1 */\n    -moz-box-sizing: content-box;\n    -webkit-box-sizing: content-box; /* 2 */\n    box-sizing: content-box;\n}\n\n/**\n * Remove inner padding and search cancel button in Safari 5 and Chrome\n * on OS X.\n */\n\ninput[type="search"]::-webkit-search-cancel-button,\ninput[type="search"]::-webkit-search-decoration {\n    -webkit-appearance: none;\n}\n\n/**\n * Remove inner padding and border in Firefox 4+.\n */\n\nbutton::-moz-focus-inner,\ninput::-moz-focus-inner {\n    border: 0;\n    padding: 0;\n}\n\n/**\n * 1. Remove default vertical scrollbar in IE 8/9.\n * 2. Improve readability and alignment in all browsers.\n */\n\ntextarea {\n    overflow: auto; /* 1 */\n    vertical-align: top; /* 2 */\n}\n\n/* ==========================================================================\n   Tables\n   ========================================================================== */\n\n/**\n * Remove most spacing between table cells.\n */\n\ntable {\n    border-collapse: collapse;\n    border-spacing: 0;\n}\n'},734:function(){document.addEventListener("DOMContentLoaded",(()=>{const n=(n,t)=>{const e=n.querySelector(t);n.dataset.open=!1,e.style.maxHeight=""};((t,e,i)=>{const s=document.querySelectorAll(".accordion");s.length&&s.forEach((t=>{const e=t.querySelector(".accordion__title"),r=t.querySelector(i);e.addEventListener("click",(e=>{"true"!==t.dataset.open?(s.forEach((t=>n(t,i))),t.dataset.open=!0,r.style.maxHeight=`${r.scrollHeight}px`):n(t,i)})),window.addEventListener("resize",(()=>{"true"===t.dataset.open&&parseInt(r.style.maxHeight)!==r.scrollHeight&&(r.style.maxHeight=`${r.scrollHeight}px`)}))}))})(0,0,".accordion__content")}))},410:function(n,t,e){"use strict";e(589),e(381),e(50),e(734)},381:function(){document.querySelectorAll(".nav__link"),window.addEventListener("scroll",(function(){const n=document.documentElement.scrollTop/(document.documentElement.scrollHeight-document.documentElement.clientHeight)*100;document.querySelector(".menu-slider.menu-slider_active").style.width=n+"%"}))},50:function(){!function(){if("function"==typeof window.CustomEvent)return!1;window.CustomEvent=function(n,t){t=t||{bubbles:!1,cancelable:!1,detail:null};var e=document.createEvent("CustomEvent");return e.initCustomEvent(n,t.bubbles,t.cancelable,t.detail),e}}();var n="slider__item_active",t="slider__control_show",e="slider__indicator_active",i="transition-none";function s(n,t){for(var e in this._$root=document.querySelector(n),this._$wrapper=this._$root.querySelector(".slider__wrapper"),this._$items=this._$root.querySelector(".slider__items"),this._$itemList=this._$root.querySelectorAll(".slider__item"),this._currentIndex=0,this._minOrder=0,this._maxOrder=0,this._$itemWithMinOrder=null,this._$itemWithMaxOrder=null,this._minTranslate=0,this._maxTranslate=0,this._direction="next",this._balancingItemsFlag=!1,this._transform=0,this._hasSwipeState=!1,this._swipeStartPosX=0,this._intervalId=null,this._config={loop:!0,autoplay:!1,interval:5e3,swipe:!0},t)this._config.hasOwnProperty(e)&&(this._config[e]=t[e]);for(var i=0,s=this._$itemList.length;i<s;i++)this._$itemList[i].dataset.order=i,this._$itemList[i].dataset.index=i,this._$itemList[i].dataset.translate=0;if(this._config.loop){var r=this._$itemList.length-1,o=100*-this._$itemList.length;this._$itemList[r].dataset.order=-1,this._$itemList[r].dataset.translate=100*-this._$itemList.length;var a="translateX(".concat(o,"%)");this._$itemList[r].style.transform=a}this._addIndicators(),this._refreshExtremeValues(),this._setActiveClass(),this._addEventListener(),this._autoplay()}s.prototype._setActiveClass=function(){var i,s,r,o;for(i=0,s=this._$itemList.length;i<s;i++)r=this._$itemList[i],o=parseInt(r.dataset.index),this._currentIndex===o?r.classList.add(n):r.classList.remove(n);var a=this._$root.querySelectorAll(".slider__indicator");if(a.length)for(i=0,s=a.length;i<s;i++)r=a[i],o=parseInt(r.dataset.slideTo),this._currentIndex===o?r.classList.add(e):r.classList.remove(e);var d=this._$root.querySelectorAll(".slider__control");if(d.length)if(this._config.loop)for(i=0,s=d.length;i<s;i++)d[i].classList.add(t);else 0===this._currentIndex?(d[0].classList.remove(t),d[1].classList.add(t)):this._currentIndex===this._$itemList.length-1?(d[0].classList.add(t),d[1].classList.remove(t)):(d[0].classList.add(t),d[1].classList.add(t))},s.prototype._move=function(){if("none"===this._direction)return this._$items.classList.remove(i),void(this._$items.style.transform="translateX(".concat(this._transform,"%)"));if(!this._config.loop){if(this._currentIndex+1>=this._$itemList.length&&"next"===this._direction)return void this._autoplay("stop");if(this._currentIndex<=0&&"prev"===this._direction)return}var n="next"===this._direction?-100:100,t=this._transform+n;"next"===this._direction?++this._currentIndex>this._$itemList.length-1&&(this._currentIndex-=this._$itemList.length):--this._currentIndex<0&&(this._currentIndex+=this._$itemList.length),this._transform=t,this._$items.style.transform="translateX(".concat(t,"%)"),this._setActiveClass()},s.prototype._moveTo=function(n){var t=this._currentIndex;this._direction=n>t?"next":"prev";for(var e=0;e<Math.abs(n-t);e++)this._move()},s.prototype._autoplay=function(n){if(this._config.autoplay)return"stop"===n?(clearInterval(this._intervalId),void(this._intervalId=null)):void(null===this._intervalId&&(this._intervalId=setInterval(function(){this._direction="next",this._move()}.bind(this),this._config.interval)))},s.prototype._addIndicators=function(){if(!this._$root.querySelector(".slider__indicators")){var n=document.createElement("ol");n.className="slider__indicators";for(var t=0,e=this._$itemList.length;t<e;t++){var i=document.createElement("li");i.className="slider__indicator",i.dataset.slideTo=t,n.appendChild(i)}this._$root.appendChild(n)}},s.prototype._refreshExtremeValues=function(){var n=this._$itemList;this._minOrder=parseInt(n[0].dataset.order),this._maxOrder=this._minOrder,this._$itemWithMinOrder=n[0],this._$itemWithMaxOrder=this._$itemWithMinOrder,this._minTranslate=parseInt(n[0].dataset.translate),this._maxTranslate=this._minTranslate;for(var t=0,e=n.length;t<e;t++){var i=n[t],s=parseInt(i.dataset.order);s<this._minOrder?(this._minOrder=s,this._$itemWithMinOrder=i,this._minTranslate=parseInt(i.dataset.translate)):s>this._maxOrder&&(this._maxOrder=s,this._$itemWithMaxOrder=i,this._minTranslate=parseInt(i.dataset.translate))}},s.prototype._balancingItems=function(){if(this._balancingItemsFlag){var n,t=this._$wrapper.getBoundingClientRect(),e=t.width/2,i=this._$itemList.length;if("next"===this._direction){var s=t.left,r=this._$itemWithMinOrder;n=this._minTranslate,r.getBoundingClientRect().right<s-e&&(r.dataset.order=this._minOrder+i,n+=100*i,r.dataset.translate=n,r.style.transform="translateX(".concat(n,"%)"),this._refreshExtremeValues())}else if("prev"===this._direction){var o=t.right,a=this._$itemWithMaxOrder;n=this._maxTranslate,a.getBoundingClientRect().left>o+e&&(a.dataset.order=this._maxOrder-i,n-=100*i,a.dataset.translate=n,a.style.transform="translateX(".concat(n,"%)"),this._refreshExtremeValues())}requestAnimationFrame(this._balancingItems.bind(this))}},s.prototype._addEventListener=function(){var n=this._$items;function t(n){this._autoplay("stop");var t=0===n.type.search("touch")?n.touches[0]:n;this._swipeStartPosX=t.clientX,this._swipeStartPosY=t.clientY,this._hasSwipeState=!0,this._hasSwiping=!1}function e(n){if(this._hasSwipeState){var t=0===n.type.search("touch")?n.touches[0]:n,e=this._swipeStartPosX-t.clientX,s=this._swipeStartPosY-t.clientY;if(!this._hasSwiping){if(Math.abs(s)>Math.abs(e))return void(this._hasSwipeState=!1);this._hasSwiping=!0}n.preventDefault(),this._config.loop||(this._currentIndex+1>=this._$itemList.length&&e>=0&&(e/=4),this._currentIndex<=0&&e<=0&&(e/=4));var r=e/this._$wrapper.getBoundingClientRect().width*100,o=this._transform-r;this._$items.classList.add(i),this._$items.style.transform="translateX(".concat(o,"%)")}}function s(n){if(this._hasSwipeState){var t=0===n.type.search("touch")?n.changedTouches[0]:n,e=this._swipeStartPosX-t.clientX;this._config.loop||(this._currentIndex+1>=this._$itemList.length&&e>=0&&(e/=4),this._currentIndex<=0&&e<=0&&(e/=4));var s=e/this._$wrapper.getBoundingClientRect().width*100;this._$items.classList.remove(i),s>20?(this._direction="next",this._move()):s<-20?(this._direction="prev",this._move()):(this._direction="none",this._move()),this._hasSwipeState=!1,this._config.loop&&this._autoplay()}}if(this._$root.addEventListener("click",function(n){var t=n.target;if(this._autoplay("stop"),t.classList.contains("slider__control"))n.preventDefault(),this._direction=t.dataset.slide,this._move();else if(t.dataset.slideTo){n.preventDefault();var e=parseInt(t.dataset.slideTo);this._moveTo(e)}this._config.loop&&this._autoplay()}.bind(this)),this._config.loop&&(n.addEventListener("transitionstart",function(){this._balancingItemsFlag=!0,window.requestAnimationFrame(this._balancingItems.bind(this))}.bind(this)),n.addEventListener("transitionend",function(){this._balancingItemsFlag=!1,this._$root.dispatchEvent(new CustomEvent("slider.transition.end",{bubbles:!0}))}.bind(this))),this._config.autoplay&&(this._$root.addEventListener("mouseenter",function(){this._autoplay("stop")}.bind(this)),this._$root.addEventListener("mouseleave",function(){this._config.loop&&this._autoplay()}.bind(this))),this._config.swipe){var r=!1;try{var o=Object.defineProperty({},"passive",{get:function(){r=!0}});window.addEventListener("testPassiveListener",null,o)}catch(n){}this._$root.addEventListener("touchstart",t.bind(this),!!r&&{passive:!1}),this._$root.addEventListener("touchmove",e.bind(this),!!r&&{passive:!1}),this._$root.addEventListener("mousedown",t.bind(this)),this._$root.addEventListener("mousemove",e.bind(this)),document.addEventListener("touchend",s.bind(this)),document.addEventListener("mouseup",s.bind(this))}this._$root.addEventListener("dragstart",function(n){n.preventDefault()}.bind(this)),document.addEventListener("visibilitychange",function(){"hidden"===document.visibilityState?this._autoplay("stop"):"visible"===document.visibilityState&&this._config.loop&&this._autoplay()}.bind(this))},s.prototype.next=function(){this._direction="next",this._move()},s.prototype.prev=function(){this._direction="prev",this._move()},s.prototype.autoplay=function(n){this._autoplay("stop")},document.addEventListener("DOMContentLoaded",(function(){new s(".journal__slider",{loop:!0,autoplay:!0,interval:5e3,swipe:!0})}))}},e={};function i(n){var s=e[n];if(void 0!==s)return s.exports;var r=e[n]={exports:{}};return t[n](r,r.exports,i),r.exports}i.m=t,n=[],i.O=function(t,e,s,r){if(!e){var o=1/0;for(h=0;h<n.length;h++){e=n[h][0],s=n[h][1],r=n[h][2];for(var a=!0,d=0;d<e.length;d++)(!1&r||o>=r)&&Object.keys(i.O).every((function(n){return i.O[n](e[d])}))?e.splice(d--,1):(a=!1,r<o&&(o=r));if(a){n.splice(h--,1);var l=s();void 0!==l&&(t=l)}}return t}r=r||0;for(var h=n.length;h>0&&n[h-1][2]>r;h--)n[h]=n[h-1];n[h]=[e,s,r]},i.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return i.d(t,{a:t}),t},i.d=function(n,t){for(var e in t)i.o(t,e)&&!i.o(n,e)&&Object.defineProperty(n,e,{enumerable:!0,get:t[e]})},i.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},function(){var n={826:0,564:0};i.O.j=function(t){return 0===n[t]};var t=function(t,e){var s,r,o=e[0],a=e[1],d=e[2],l=0;if(o.some((function(t){return 0!==n[t]}))){for(s in a)i.o(a,s)&&(i.m[s]=a[s]);if(d)var h=d(i)}for(t&&t(e);l<o.length;l++)r=o[l],i.o(n,r)&&n[r]&&n[r][0](),n[o[l]]=0;return i.O(h)},e=self.webpackChunk=self.webpackChunk||[];e.forEach(t.bind(null,0)),e.push=t.bind(null,e.push.bind(e))}();var s=i.O(void 0,[564],(function(){return i(410)}));s=i.O(s)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,